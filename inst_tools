#!/bin/bash
#
# Copyright (c) 2018 Texas Instruments, Inc.
#
# SPDX-License-Identifier: MIT
#
# Download and install GCC toolchain and required SDK(s) for the board
#
# Usage:
# inst_tools directory board
#
#   * directory - location where toolchain and SDKs will be installed
#   * board - name of board - must contain SoC family name
#
# The URLs below represent the currently supported versions for this
# MicroPython port. As new toolchains and SDKs are released, the URLs
# will be updated, serving as documentation of required versions
#

declare -r ARM_NONE_GCC="https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major"

declare -r MSP432E4_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_msp432e4_sdk/2.10.00.17/simplelink_msp432e4_sdk_2_10_00_17"
declare -r MSP432P4_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_msp432_sdk/2.10.00.14/simplelink_msp432p4_sdk_2_10_00_14"

# Someday ... when these are directly downloadable
# declare -r CC13X2_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_cc13x2_sdk/2.10.00.48/simplelink_cc13x2_sdk_2_10_00_48"
# declare -r CC32XX_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_cc32xx_sdk/2.10.00.04/simplelink_cc32xx_sdk_2_10_00_04"

CACHEPATH="file://$(cd "$(dirname "$0")"; pwd -P)/installs"
declare -r CC13X2_SDK="$CACHEPATH/simplelink_cc13x2_sdk_2_10_00_48"
declare -r CC32XX_SDK="$CACHEPATH/simplelink_cc32xx_sdk_2_10_00_04"
declare -r CC3120_SDK="$CACHEPATH/simplelink_sdk_wifi_plugin_1_55_00_42_roger"

fetch()
{

    if curl -O -# -L $1
    then
        basename $1
    else
        echo "could not download $1" 1>&2
        exit 4
    fi
}

get_install_gcc()
{
    gcc=$(basename $ARM_NONE_GCC)
    if test -d $gcc
    then
        echo $gcc already installed
        return
    fi

    if $1
    then
        tarball=$(fetch $ARM_NONE_GCC"-linux.tar.bz2")
    else
        tarball=$(fetch $ARM_NONE_GCC"-mac.tar.bz2")
    fi

    tar xf $tarball
    rm $tarball
}

get_install_sdk()
{
    sdk=$(basename $1)
    if test -d $sdk
    then
        echo $sdk already installed
        return
    fi

    if $2
    then
        inst_bin=$(fetch $1".run")
        if [ $? == 0 ]
        then
            chmod +x $inst_bin
            ./$inst_bin --mode unattended --prefix $PWD
            rm $inst_bin
        fi
    else
        inst_bin=$(fetch $1".app.zip")
        if [ $? == 0 ]
        then
            unzip -q $inst_bin
	    # the --args is for the macOS open command
            open ./${inst_bin%.zip} --args --mode unattended --prefix $PWD
            rm -r $inst_bin ${inst_bin%.zip}
        fi
    fi
}

main()
{
    board=${1:-MSP432E4}
    dst=${2:-./tools}

    case $OSTYPE in
        darwin*)
            is_linux=false
            ;;
        linux-gnu*)
            is_linux=true
            ;;
        *)
            echo "unrecognized OS: $OSTYPE" 1>&2
            exit 1
            ;;
    esac

    mkdir -p $dst
    if ! cd $dst
    then
        echo "could not change to directory $dst" 1>&2
        exit 2
    fi

    get_install_gcc $is_linux

    case $board in
        MSP_EXP432E401Y_CC3120)
            get_install_sdk $MSP432E4_SDK $is_linux
            get_install_sdk $CC3120_SDK $is_linux
            ;;
        *CC32*)
            echo "you must manually download CC32XX SDK" 1>&2
            get_install_sdk $CC32XX_SDK $is_linux
            ;;
        *CC13?2*)
            echo "you must manually download CC13X2 SDK" 1>&2
            get_install_sdk $CC13X2_SDK $is_linux
            ;;
        *432E4*)
            get_install_sdk $MSP432E4_SDK $is_linux
            ;;
        *432P4*)
            get_install_sdk $MSP432P4_SDK $is_linux
            ;;
        *)
            echo "unrecognized board: $board" 1>&2
            exit 3
            ;;
    esac
}

main $1 $2
