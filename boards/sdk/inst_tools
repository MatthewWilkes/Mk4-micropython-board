#!/bin/bash
# myset -x

export http_proxy="wwweuproxy.itg.ti.com:80"
export https_proxy="wwweuproxy.itg.ti.com:80"

#export http_proxy=""
#export https_proxy=""

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Someday when these are directly downloadable
# declare -r CC13X2_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_cc13x2_sdk/2.10.00.48/simplelink_cc13x2_sdk_2_10_00_48"
# declare -r CC32XX_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_cc32xx_sdk/2.10.00.04/simplelink_cc32xx_sdk_2_10_00_04"

declare -r MSP432E4_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_msp432e4_sdk/2.10.00.17/simplelink_msp432e4_sdk_2_10_00_17"
declare -r MSP432P4_SDK="http://software-dl.ti.com/simplelink/esd/simplelink_msp432_sdk/2.10.00.14/simplelink_msp432p4_sdk_2_10_00_14"

declare -r MSP432_WIFI_SDK="$SCRIPTPATH/installs/simplelink_sdk_wifi_plugin_1_55_00_42_rogerSdk210"

#declare -r ARM_NONE_GCC="https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major"
declare -r ARM_NONE_GCC="http://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major"

declare -r XDCTOOLS="http://software-dl.ti.com/dsps/dsps_public_sw/sdo_sb/targetcontent/rtsc/3_50_05_12/exports/xdccore/xdctools_3_50_05_12_core"

fetch()
{
#    curl -O -# -L $1 1>&2
    curl -O -1 -L $1 1>&2
    if test $? == 0
    then
        basename $1
    else
        echo "could not download $1" 1>&2
        exit 4
    fi
}

get_gcc()
{
    gcc=$(basename $ARM_NONE_GCC)
    if test -d $gcc
    then
        echo $gcc already installed
        return
    fi

    if $1
    then
        echo "INFO fetching gcc-linux"
        tarball=$(fetch $ARM_NONE_GCC"-linux.tar.bz2")
    else
        echo "INFO fetching gcc-mac"
        tarball=$(fetch $ARM_NONE_GCC"-mac.tar.bz2")
    fi

    echo "INFO unpacking $tarball"
    tar xf $tarball
    rm $tarball
    
    #mkdir $gcc
}

get_xdctools()
{
    xdc=$(basename $XDCTOOLS)
    if test -d $xdc
    then
        echo $xdc already installed
        return
    fi

    if $1
    then
        echo "INFO fetching xdc linux" 
        zipball=$(fetch $XDCTOOLS"_linux.zip")
    else
        echo "INFO fetching xdc mac" 
	zipball=$(fetch $XDCTOOLS"_macos.zip")
    fi

    unzip -q $zipball
    rm $zipball

    #mkdir $xdc
}

get_install_sdk()
{
    sdk=$(basename $1)
    if test -d $sdk
    then
        echo $sdk already installed
        return
    fi

    if $2
    then
        echo "INFO fetching SDK linux"
	inst_bin=$(fetch $1".run")
        chmod +x $inst_bin
        ./$inst_bin --mode unattended --prefix $PWD
        rm $inst_bin
        #mkdir $(basename $sdk)
    else
        echo "INFO fetching SDK mac"
	inst_bin=$(fetch $1".app.zip")
        unzip -q $inst_bin
        open ${inst_bin%.zip} --mode unattended --prefix $PWD
        rm -r $inst_bin ${inst_bin%.zip}
    fi
}

get_install_sdk_addon()
{
    addon=$(basename $1)
    if test -d $addon
    then
        echo $addon already installed
        return
    fi
    
    echo "INFO unpacking addon"
    tarball=$1".tar.gz"
    tar xf $tarball
}

main()
{
    board=${1:-MSP432E4}
    dst=${2:-./tools}

    case $OSTYPE in
        darwin*)
            is_linux=false
            ;;
        linux-gnu*)
            is_linux=true
            ;;
        *)
            echo "unrecognized OS: $OSTYPE" 1>&2
            exit 1
            ;;
    esac

    mkdir -p $dst
    if ! cd $dst
    then
        echo "could not change to directory $dst" 1>&2
        exit 2
    fi

    echo getting gcc
    get_gcc $is_linux
    
    echo getting xdc
    get_xdctools $is_linux

    case $board in
        *CC32*)
            get_install_sdk $CC32XX_SDK $is_linux
            ;;
        *CC13?2*)
            get_install_sdk $CC13X2_SDK $is_linux
            ;;
        *432E4*)
            get_install_sdk $MSP432E4_SDK $is_linux
            ;;
        *432P4*)
            get_install_sdk $MSP432P4_SDK $is_linux
            ;;
        *CC3120*)
            get_install_sdk $MSP432E4_SDK $is_linux
            get_install_sdk_addon $MSP432_WIFI_SDK $is_linux
            ;;
        *)
            echo "unrecognized board: $board" 1>&2
            exit 3
            ;;
    esac
            
}

main $1 $2
